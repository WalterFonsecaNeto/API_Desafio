// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SistemaGerenciamentoDeComandas.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dominio.Cardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardapioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Disponibilidade")
                        .HasColumnType("bit")
                        .HasColumnName("Disponibilidade");

                    b.HasKey("Id");

                    b.ToTable("Cardapio", (string)null);
                });

            modelBuilder.Entity("Dominio.CardapioProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardapioProdutoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CardapioID")
                        .HasColumnType("int")
                        .HasColumnName("CardapioID");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int")
                        .HasColumnName("ProdutoID");

                    b.HasKey("Id");

                    b.HasIndex("CardapioID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("CardapiosProdutos", (string)null);
                });

            modelBuilder.Entity("Dominio.Comanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComandaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data");

                    b.Property<int>("Mesa")
                        .HasColumnType("int")
                        .HasColumnName("Mesa");

                    b.Property<string>("NomeGarcom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeGarcom");

                    b.HasKey("Id");

                    b.ToTable("Comandas", (string)null);
                });

            modelBuilder.Entity("Dominio.ComandaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComandaProdutoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComandaID")
                        .HasColumnType("int")
                        .HasColumnName("ComandaID");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int")
                        .HasColumnName("ProdutoID");

                    b.HasKey("Id");

                    b.HasIndex("ComandaID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("ComandasProdutos", (string)null);
                });

            modelBuilder.Entity("Dominio.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProdutoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeProduto");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PrecoProduto");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("Dominio.CardapioProduto", b =>
                {
                    b.HasOne("Dominio.Cardapio", "Cardapio")
                        .WithMany("Produtos")
                        .HasForeignKey("CardapioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.Produto", "Produto")
                        .WithMany("Cardapios")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cardapio");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dominio.ComandaProduto", b =>
                {
                    b.HasOne("Dominio.Comanda", "Comanda")
                        .WithMany("Produtos")
                        .HasForeignKey("ComandaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.Produto", "Produto")
                        .WithMany("Comandas")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Dominio.Cardapio", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Dominio.Comanda", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Dominio.Produto", b =>
                {
                    b.Navigation("Cardapios");

                    b.Navigation("Comandas");
                });
#pragma warning restore 612, 618
        }
    }
}
